---
- name: Install Evilnginx
  hosts: 66.228.62.183
  become: yes
  tags: evilginx
  tasks:

    - name: Update apt package cache (for Debian/Ubuntu)
      apt:
        update_cache: yes
      when: ansible_os_family == 'Debian'

    - name: Install packages
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - tmux
        - golang-go
        - git
        - make
      tags:
        - install
        - packages

    - name: Set up Go environment variables
      lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        line: "{{ item }}"
      with_items:
        - 'export GOPATH=$HOME/go'
        - 'export PATH=$PATH:$GOPATH/bin'
    - name: Clone the evilnginx2 repository
      git:
        repo: https://github.com/BakkerJan/evilginx2.git
        dest: "{{ansible_env.HOME}}/evilginx2"
      register: git_clone_result
    - name: Print Clone result
      debug:
        var: git_clone_result
- name: Install covenant
  hosts: 66.228.62.183
  become: yes
  tags: covenant
  tasks:
    - name: Remove Native docker
      package:
        name: "{{ item }}"
        state: absent
      with_items:
        - docker.io
        - docker-doc  
        - docker-compose
        - podman-docker
        - containerd
        - runc
    - name: Update apt package cache (for Debian/Ubuntu)
      apt:
        update_cache: yes
      when: ansible_os_family == 'Debian'
    - name: Install Certificate stuff
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - ca-certificates
        - curl
        - gnupg
    - name: Create the directory with specific permissions
      command: install -m 0755 -d /etc/apt/keyrings
    - name: Download Docker GPG Key
      shell: curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      args:
        executable: /bin/bash

    - name: Set Permissions for Docker GPG Key
      file:
        path: /etc/apt/keyrings/docker.gpg
        mode: '0644'
    - name: Get the system architecture
      shell: dpkg --print-architecture
      register: system_architecture
    - name: Get Debian version
      shell: . /etc/os-release && echo "$VERSION_CODENAME"
      register: debian_version
    - name: Create Docker APT Repository Entry
      copy:
        content: |
          deb [arch="{{ system_architecture }}" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian "{{ debian_version }}" stable
        dest: /etc/apt/sources.list.d/docker.list
      when: not ansible_check_mode 
    - name: Update apt package cache (for Debian/Ubuntu)
      apt:
        update_cache: yes
      when: ansible_os_family == 'Debian'
    - name: Clone the Git Repository with Submodules
      git:
        repo: https://github.com/cobbr/Covenant
        dest: "{{ansible_env.HOME}}/Covenant" 
        version: master  
        recursive: yes 
